<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Terminal.Converters">
  <!--  
  <converters:PriceConverter x:Key="PriceConverter"/>
  <converters:StringNullOrEmptyBoolConverter x:Key="StringNullOrEmptyBoolConverter"/>
  <converters:ImageVisibilityConverter x:Key="ImageVisibilityConverter"/>
  <converters:ImageAlignmentConverter x:Key="ImageAlignmentConverter"/>
-->    
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  <Style x:Key="RightButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="0 10"/>
    <Setter Property="FrameworkElement.Height" Value="210"/>
    <Setter Property="FrameworkElement.Width" Value="60"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Canvas>
            <Polygon StrokeThickness="1" Points="0,0 60,105 0,210">
              <Shape.Stroke>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E31E24" Offset="0.6"/>
                  <GradientStop Color="#E31E24" Offset="0"/>
                </LinearGradientBrush>
              </Shape.Stroke>
            </Polygon>
            <Polygon StrokeThickness="0" Points="2,5 58,105 2,205">
              <Shape.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E31E24" Offset="0.6"/>
                  <GradientStop Color="#E31E24" Offset="0"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Polygon>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Visibility" Value="Hidden"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="LeftButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="0 10"/>
    <Setter Property="FrameworkElement.Height" Value="210"/>
    <Setter Property="FrameworkElement.Width" Value="60"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Canvas>
            <Polygon StrokeThickness="1" Points="60,0 0,105 60,210">
              <Shape.Stroke>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E31E24" Offset="0.6"/>
                  <GradientStop Color="#E31E24" Offset="0"/>
                </LinearGradientBrush>
              </Shape.Stroke>
            </Polygon>
            <Polygon StrokeThickness="0" Points="58,5 2,105 58,205">
              <Shape.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E31E24" Offset="0.6"/>
                  <GradientStop Color="#E31E24" Offset="0"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Polygon>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Visibility" Value="Hidden"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="StatusBarLabelStyle" TargetType="{x:Type Label}">
    <Setter Property="Control.FontSize" Value="16"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Style.Triggers>
      <Trigger Property="ContentControl.Content" Value="">
        <Setter Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TriangleButtonRight" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="10"/>
    <Setter Property="FrameworkElement.Height" Value="140"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Canvas>
            <Polygon StrokeThickness="1" Points="0,0 50,0 80,75 50,140 0,140">
              <Shape.Stroke>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E31E24" Offset="0.6"/>
                  <GradientStop Color="#E31E24" Offset="0"/>
                </LinearGradientBrush>
              </Shape.Stroke>
            </Polygon>
            <Polygon StrokeThickness="0" Points="2,2 49,2 78,75 49,138 2,138">
              <Shape.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E31E24" Offset="0.6"/>
                  <GradientStop Color="#E31E24" Offset="0"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Polygon>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Canvas>
                <Polygon StrokeThickness="1" Points="0,0 50,0 80,75 50,140 0,140">
                  <Shape.Stroke>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <GradientStop Color="#838383" Offset="0.6"/>
                      <GradientStop Color="#BABABA" Offset="0"/>
                    </LinearGradientBrush>
                  </Shape.Stroke>
                </Polygon>
                <Polygon StrokeThickness="0" Points="2,2 49,2 78,75 49,138 2,138">
                  <Shape.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <GradientStop Color="#838383" Offset="0.6"/>
                      <GradientStop Color="#BABABA" Offset="0"/>
                    </LinearGradientBrush>
                  </Shape.Fill>
                </Polygon>
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TriangleButtonLeft" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="10"/>
    <Setter Property="FrameworkElement.Height" Value="140"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Canvas>
            <Polygon StrokeThickness="1" Points="80,0 30,0 0,75 30,140 80,140">
              <Shape.Stroke>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E31E24" Offset="0.6"/>
                  <GradientStop Color="#E31E24" Offset="0"/>
                </LinearGradientBrush>
              </Shape.Stroke>
            </Polygon>
            <Polygon StrokeThickness="0" Points="78,2 32,2 2,75 32,138 78,138">
              <Shape.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E31E24" Offset="0.6"/>
                  <GradientStop Color="#E31E24" Offset="0"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Polygon>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="FrameworkElement.Margin" Value="30 0 30 10"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <StackPanel Background="White">
            <Border x:Name="ImageBorder" CornerRadius="0" Width="160" Height="106"
                    Visibility="{Binding Image, Converter={StaticResource ImageVisibilityConverter}}">
              <Image x:Name="Image" Height="104" Width="auto" VerticalAlignment="Center" Source="{Binding Image}"/>
            </Border>
            <Label x:Name="Label">
              <ContentControl.Content>
                <TextBlock x:Name="TextBlock" Margin="0 -5" TextWrapping="Wrap" TextAlignment="Center" FontSize="25"
                           Typography.Capitals="AllSmallCaps" Text="{Binding Name}"/>
              </ContentControl.Content>
            </Label>
            <Label FontSize="25"
                   Visibility="{Binding Price, Converter={StaticResource StringNullOrEmptyBoolConverter}}"
                   Content="{Binding Price, Converter={StaticResource PriceConverter}}"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SecondButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="FrameworkElement.Width" Value="180"/>
    <Setter Property="FrameworkElement.Height" Value="180"/>
    <Setter Property="FrameworkElement.Margin" Value="15, 5"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" BorderThickness="0" Background="Transparent">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="Transparent"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MainButtonActiveStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="FrameworkElement.Margin" Value="15, 5"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="UIElement.Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="10" ShadowDepth="5" Color="Gray"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" CornerRadius="20" Background="#FEFEFE" Width="180" Height="180" Padding="10"
                  BorderThickness="0">
            <StackPanel>
              <Image x:Name="Image" Height="104" Width="auto" VerticalAlignment="Center" Source="{Binding Image}"/>
              <Label x:Name="Label">
                <ContentControl.Content>
                  <TextBlock x:Name="TextBlock" Margin="0 -5" TextWrapping="Wrap" TextAlignment="Center" FontSize="22"
                             Typography.Capitals="AllSmallCaps" Text="{Binding Name}"/>
                </ContentControl.Content>
              </Label>
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="Transparent"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlackButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="5"/>
    <Setter Property="FrameworkElement.Width" Value="200"/>
    <Setter Property="FrameworkElement.Height" Value="70"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="Black"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Control.Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Color="#302F2E" Offset="0.6"/>
          <GradientStop Color="#808282" Offset="0"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                  CornerRadius="20" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <ContentPresenter VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                              HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                              Content="{TemplateBinding ContentControl.Content}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PhoneButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="5"/>
    <Setter Property="FrameworkElement.Width" Value="120"/>
    <Setter Property="FrameworkElement.Height" Value="70"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.BorderBrush" Value="Black"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.FontSize" Value="50"/>
    <Setter Property="Control.Foreground" Value="#2B2A29"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                  CornerRadius="20" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <ContentPresenter VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                              HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                              Content="{TemplateBinding ContentControl.Content}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RedButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="20"/>
    <Setter Property="FrameworkElement.Width" Value="200"/>
    <Setter Property="FrameworkElement.Height" Value="70"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="#E31E24"/>
    <Setter Property="Control.Foreground" Value="White"/>
    <Setter Property="Control.FontSize" Value="24"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                  CornerRadius="10" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <ContentPresenter VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                              HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                              Content="{TemplateBinding ContentControl.Content}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DelButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="5"/>
    <Setter Property="Control.Padding" Value="0 0 0 10"/>
    <Setter Property="FrameworkElement.Width" Value="40"/>
    <Setter Property="FrameworkElement.Height" Value="40"/>
    <Setter Property="Control.BorderThickness" Value="2"/>
    <Setter Property="Control.BorderBrush" Value="#E31E24"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Foreground" Value="#E31E24"/>
    <Setter Property="Control.FontSize" Value="28"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                  CornerRadius="20" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <ContentPresenter VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                              HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                              Content="{TemplateBinding ContentControl.Content}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DelBorderStyle" TargetType="{x:Type Border}">
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="Border.Padding" Value="0 0 0 10"/>
    <Setter Property="FrameworkElement.Width" Value="40"/>
    <Setter Property="Border.CornerRadius" Value="20"/>
    <Setter Property="FrameworkElement.Height" Value="40"/>
    <Setter Property="Border.BorderThickness" Value="2"/>
    <Setter Property="Border.BorderBrush" Value="#E31E24"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Border.Background" Value="Transparent"/>
  </Style>
  <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="20"/>
    <Setter Property="FrameworkElement.Width" Value="200"/>
    <Setter Property="FrameworkElement.Height" Value="70"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="#FFED00"/>
    <Setter Property="Control.Foreground" Value="White"/>
    <Setter Property="Control.FontSize" Value="24"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                  CornerRadius="10" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <ContentPresenter VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                              HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                              Content="{TemplateBinding ContentControl.Content}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="FrButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BlackButtonStyle}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="FrameworkElement.Width" Value="300"/>
    <Setter Property="FrameworkElement.Height" Value="100"/>
    <Setter Property="FrameworkElement.Margin" Value="30 0 30 0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderBrush" Value="Black"/>
    <Setter Property="Control.BorderThickness" Value="3"/>
    <Setter Property="Control.Background" Value="#ffffff"/>
    <Setter Property="Control.Foreground" Value="#2B2A29"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="Control.FontSize" Value="25"/>
  </Style>
  <Style x:Key="CartButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BlackButtonStyle}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="FrameworkElement.Width" Value="300"/>
    <Setter Property="FrameworkElement.Height" Value="100"/>
    <Setter Property="FrameworkElement.Margin" Value="30 0 30 0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderBrush" Value="Black"/>
    <Setter Property="Control.BorderThickness" Value="3"/>
    <Setter Property="Control.Background" Value="#ffffff"/>
    <Setter Property="Control.Foreground" Value="#2B2A29"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="Control.FontSize" Value="25"/>
  </Style>
  <Style x:Key="Shadow" TargetType="{x:Type Border}">
    <Setter Property="UIElement.Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="10" ShadowDepth="5" Color="Gray"/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OrangeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BlackButtonStyle}">
    <Setter Property="FrameworkElement.Margin" Value="30 0 30 10"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="#2B2A29"/>
    <Setter Property="Control.Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Color="#D68710" Offset="0.6"/>
          <GradientStop Color="#E9BB76" Offset="0"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground" Value="White"/>
    <Setter Property="Control.FontWeight" Value="Light"/>
    <Setter Property="Control.FontSize" Value="25"/>
    <Setter Property="UIElement.Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="10" ShadowDepth="5" Color="Gray"/>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="true">
        <Setter Property="Control.Background" Value="#FEFEFE"/>
        <Setter Property="Control.Foreground" Value="#2B2A29"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="Control.BorderBrush" Value="#C4C4C4"/>
        <Setter Property="Control.Background">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <GradientStop Color="#848484" Offset="0.6"/>
              <GradientStop Color="#BDBDBD" Offset="0"/>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="toggleStyle" BasedOn="{StaticResource {x:Type ToggleButton}}"
         TargetType="{x:Type RadioButton}">
    <Setter Property="FrameworkElement.Margin" Value="30 0 30 10"/>
    <Setter Property="FrameworkElement.Width" Value="200"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="#2B2A29"/>
    <Setter Property="Control.Background" Value="White"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.FontSize" Value="25"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                  CornerRadius="10" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <ContentPresenter VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                              HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                              Content="{TemplateBinding ContentControl.Content}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ToggleButton.IsChecked" Value="true">
        <Setter Property="Control.Background" Value="Red"/>
        <Setter Property="Control.Foreground" Value="White"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="YellowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BlackButtonStyle}">
    <Setter Property="FrameworkElement.Margin" Value="30 0 30 10"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Foreground" Value="#2B2A29"/>
    <Setter Property="Control.FontWeight" Value="SemiBold"/>
    <Setter Property="Control.FontSize" Value="25"/>
    <Setter Property="UIElement.Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="10" ShadowDepth="5" Color="Gray"/>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="true">
        <Setter Property="Control.Background" Value="#FEE405"/>
        <Setter Property="Control.Foreground" Value="#2B2A29"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TopButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Margin" Value="5"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" BorderThickness="0" Background="Transparent">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="border" Property="Border.BorderThickness" Value="0"/>
              <Setter TargetName="border" Property="Border.Background" Value="Transparent"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Hair" TargetType="{x:Type Grid}">
    <Setter Property="Typography.Capitals" Value="AllSmallCaps"/>
  </Style>
  <Style x:Key="HairText" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.Background" Value="#E9E9E9"/>
    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
    <Setter Property="TextBlock.FontSize" Value="16"/>
    <Setter Property="TextBlock.Padding" Value="20 2"/>
  </Style>
  <Style x:Key="HairBorder" TargetType="{x:Type Line}">
    <Setter Property="Shape.Stroke" Value="#E31E24"/>
    <Setter Property="Shape.StrokeDashArray" Value="4 4"/>
    <Setter Property="Shape.StrokeThickness" Value="3"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Line.X1" Value="0"/>
    <Setter Property="Line.X2" Value="0"/>
    <Setter Property="Line.Y1" Value="0"/>
    <Setter Property="Line.Y2" Value="510"/>
  </Style>
  <Style x:Key="MainWrapPanel" TargetType="{x:Type WrapPanel}">
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="WrapPanel.Orientation" Value="Horizontal"/>
    <Setter Property="FrameworkElement.MaxWidth" Value="1280"/>
    <Setter Property="Panel.IsItemsHost" Value="true"/>
  </Style>
  <Style x:Key="SecondWrapPanel" TargetType="{x:Type WrapPanel}">
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Top"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="WrapPanel.Orientation" Value="Horizontal"/>
    <Setter Property="FrameworkElement.MaxWidth" Value="1280"/>
    <Setter Property="Panel.IsItemsHost" Value="true"/>
    <Setter Property="Panel.Background" Value="Transparent"/>
  </Style>
  <Style x:Key="ResImage" TargetType="{x:Type Image}">
    <Setter Property="Image.Source" Value="/Images/logo2.png"/>
    <Setter Property="FrameworkElement.MaxWidth" Value="1000"/>
    <Setter Property="FrameworkElement.Height" Value="140"/>
    <Setter Property="FrameworkElement.Width" Value="Auto"/>
  </Style>
  <Style x:Key="FrImage" TargetType="{x:Type Image}">
    <Setter Property="Image.Source" Value="/Images/FrInfo.jpg"/>
    <Setter Property="FrameworkElement.Width" Value="1280"/>
    <Setter Property="FrameworkElement.Height" Value="1024"/>
  </Style>
  <Style x:Key="MainButton" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Width" Value="250"/>
    <Setter Property="FrameworkElement.Height" Value="75"/>
    <Setter Property="FrameworkElement.Margin" Value="10"/>
    <Setter Property="Control.Background" Value="Orange"/>
  </Style>
  <Style TargetType="{x:Type StackPanel}">
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
  </Style>
  <Style TargetType="{x:Type Label}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
  </Style>
  <Style TargetType="{x:Type ListBox}">
    <Setter Property="Control.BorderThickness" Value="0"/>
  </Style>
  <Style x:Key="InfBlock1" TargetType="{x:Type Label}">
    <Setter Property="Control.Foreground" Value="#FEFEFE"/>
    <Setter Property="Control.FontSize" Value="38"/>
    <Setter Property="FrameworkElement.Margin" Value="0,20,0,0"/>
    <Setter Property="Control.FontWeight" Value="SemiBold"/>
    <Setter Property="Control.FontFamily" Value="Segoe UI"/>
  </Style>
  <Style x:Key="InfBlock1PhoneNumberWindow" TargetType="{x:Type Label}" BasedOn="{StaticResource InfBlock1}">
    <Setter Property="Control.FontSize" Value="50"/>
    <Setter Property="Control.Foreground" Value="#ED2737"/>
  </Style>
  <Style x:Key="HeaderLabelPhoneNumberWindow" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
    <Setter Property="TextBlock.FontSize" Value="24"/>
    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    <Setter Property="TextBlock.Foreground" Value="#2B2A29"/>
    <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
  </Style>
  <Style x:Key="HeaderLabelBonusPhoneNumberWindow" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
    <Setter Property="TextBlock.FontSize" Value="38"/>
    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    <Setter Property="TextBlock.Foreground" Value="#E31E24"/>
    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
  </Style>
  <Style x:Key="TextStyle" TargetType="{x:Type Label}">
    <Setter Property="Control.FontWeight" Value="SemiBold"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.FontFamily" Value="Calibri"/>
  </Style>
  <Style x:Key="tbTextStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="TextBlock.FontFamily" Value="Calibri"/>
  </Style>
  <Style x:Key="TextSize1" TargetType="{x:Type Label}" BasedOn="{StaticResource TextStyle}">
    <Setter Property="Control.FontSize" Value="18"/>
  </Style>
  <Style x:Key="TextSize2" TargetType="{x:Type Label}" BasedOn="{StaticResource TextStyle}">
    <Setter Property="Control.FontSize" Value="22"/>
  </Style>
  <Style x:Key="TbTextSize2" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource tbTextStyle}">
    <Setter Property="TextBlock.FontSize" Value="25"/>
    <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,20"/>
  </Style>
  <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
    <Setter Property="Control.FontSize" Value="45"/>
    <Setter Property="FrameworkElement.Width" Value="200"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
  </Style>
  <Style x:Key="TextSize4" TargetType="{x:Type Label}" BasedOn="{StaticResource TextSize2}">
    <Setter Property="Control.Foreground" Value="#2B2A29"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
  </Style>
  <Style x:Key="TextSize3" TargetType="{x:Type Label}" BasedOn="{StaticResource TextStyle}">
    <Setter Property="Control.FontSize" Value="35"/>
  </Style>
  <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="15"/>
    <Setter Property="FrameworkElement.Height" Value="Auto"/>
    <Setter Property="FrameworkElement.Width" Value="205"/>
  </Style>
  <Style x:Key="BlackButtonStyleSmall" TargetType="{x:Type Button}"
         BasedOn="{StaticResource BlackButtonStyle}">
    <Setter Property="FrameworkElement.Width" Value="120"/>
    <Setter Property="FrameworkElement.Height" Value="70"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
  </Style>
  <Style x:Key="OrangeButtonStyleSmall" TargetType="{x:Type Button}"
         BasedOn="{StaticResource BlackButtonStyle}">
    <Setter Property="FrameworkElement.Width" Value="120"/>
    <Setter Property="FrameworkElement.Height" Value="70"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Color="#E39316" Offset="0.6"/>
          <GradientStop Color="#FBC36E" Offset="0"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="FooterTextStyle" TargetType="{x:Type Label}">
    <Setter Property="Control.FontSize" Value="16"/>
    <Setter Property="Control.Foreground" Value="#959595"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
  </Style>
  <Style x:Key="PhoneBorder" TargetType="{x:Type Line}">
    <Setter Property="Shape.Stroke" Value="#E31E24"/>
    <Setter Property="Shape.StrokeDashArray" Value="3 3"/>
    <Setter Property="Shape.StrokeThickness" Value="3"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
  </Style>
  <Style x:Key="PhoneBackground" TargetType="{x:Type Rectangle}">
    <Setter Property="Shape.Fill" Value="#E9E9E9"/>
  </Style>
  <Style x:Key="CartStyle" TargetType="{x:Type DataGrid}">
    <Setter Property="Control.FontSize" Value="32"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.FontFamily" Value="Calibri"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Typography.Capitals" Value="AllSmallCaps"/>
    <Setter Property="FrameworkElement.Width" Value="1280"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="DataGrid.AutoGenerateColumns" Value="false"/>
    <Setter Property="DataGrid.HorizontalGridLinesBrush" Value="White"/>
    <Setter Property="DataGrid.VerticalGridLinesBrush" Value="{DynamicResource LineBrush}"/>
    <Setter Property="DataGrid.RowBackground" Value="#E9E9E9"/>
    <Setter Property="DataGrid.AlternatingRowBackground" Value="White"/>
    <Setter Property="DataGrid.IsReadOnly" Value="true"/>
    <Setter Property="DataGrid.CanUserSortColumns" Value="false"/>
    <Setter Property="DataGrid.CanUserReorderColumns" Value="false"/>
    <Setter Property="DataGrid.CanUserResizeColumns" Value="false"/>
    <Setter Property="DataGrid.CanUserResizeRows" Value="false"/>
    <Setter Property="DataGrid.SelectionMode" Value="Single"/>
    <Setter Property="DataGrid.SelectionUnit" Value="Cell"/>
    <Setter Property="DataGrid.ColumnHeaderStyle" Value="{DynamicResource CartColumnHeaderStyle}"/>
    <Setter Property="DataGrid.RowHeaderWidth" Value="0"/>
  </Style>
  <Style x:Key="CartColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Control.Background" Value="White"/>
    <Setter Property="Control.FontSize" Value="18"/>
  </Style>
  <VisualBrush x:Key="LineBrush">
    <VisualBrush.Visual>
      <Rectangle Stroke="#E31E24" StrokeThickness="3" StrokeDashArray="3 3" SnapsToDevicePixels="true" Width="3"
                 Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
    </VisualBrush.Visual>
  </VisualBrush>
  <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border x:Name="Border" Margin="1" CornerRadius="2" BorderThickness="1">
            <Border.BorderBrush>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0"/>
                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0"/>
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.BorderBrush>
            <Border.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="{DynamicResource ControlLightColor}"/>
                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0"/>
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.Background>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlPressedColor}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                  Storyboard.TargetProperty="(Shape.Fill).                     (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource DisabledForegroundColor}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}">
              <Shape.Fill>
                <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
              </Shape.Fill>
            </Path>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border CornerRadius="2" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition MaxHeight="36"/>
        <RowDefinition Height="0.00001*"/>
        <RowDefinition MaxHeight="36"/>
      </Grid.RowDefinitions>
      <Border Grid.RowSpan="3" CornerRadius="2" Background="#F0F0F0"/>
      <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="36"
                    Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z"/>
      <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
        <Track.DecreaseRepeatButton>
          <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0">
            <Control.BorderBrush>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0"/>
                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0"/>
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Control.BorderBrush>
            <Control.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0"/>
                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0"/>
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Control.Background>
          </Thumb>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="36"
                    Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition MaxWidth="36"/>
        <ColumnDefinition Width="0.00001*"/>
        <ColumnDefinition MaxWidth="36"/>
      </Grid.ColumnDefinitions>
      <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
      <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="36"
                    Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z"/>
      <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
        <Track.DecreaseRepeatButton>
          <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1">
            <Control.BorderBrush>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0"/>
                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0"/>
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Control.BorderBrush>
            <Control.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0"/>
                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0"/>
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Control.Background>
          </Thumb>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="36"
                    Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
    </Grid>
  </ControlTemplate>
  <Style TargetType="{x:Type ScrollBar}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="FrameworkElement.Width" Value="Auto"/>
        <Setter Property="FrameworkElement.Height" Value="36"/>
        <Setter Property="Control.Template" Value="{StaticResource HorizontalScrollBar}"/>
      </Trigger>
      <Trigger Property="ScrollBar.Orientation" Value="Vertical">
        <Setter Property="FrameworkElement.Width" Value="36"/>
        <Setter Property="FrameworkElement.Height" Value="Auto"/>
        <Setter Property="Control.Template" Value="{StaticResource VerticalScrollBar}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Color x:Key="WindowColor">#FFE8EDF9</Color>
  <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
  <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>
  <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
  <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
  <Color x:Key="DisabledForegroundColor">#FF888888</Color>
  <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
  <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
  <Color x:Key="ControlLightColor">#E39316</Color>
  <Color x:Key="ControlMediumColor">#FBC36E</Color>
  <Color x:Key="ControlDarkColor">#FBC36E</Color>
  <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
  <Color x:Key="ControlPressedColor">#FF211AA9</Color>
  <Color x:Key="GlyphColor">#FF444444</Color>
  <Color x:Key="GlyphMouseOver">
    sc#1, 0.004391443, 0.002428215, 0.242281124
  </Color>
  <Color x:Key="BorderLightColor">#E39316</Color>
  <Color x:Key="BorderMediumColor">#FBC36E</Color>
  <Color x:Key="BorderDarkColor">#FBC36E</Color>
  <Color x:Key="PressedBorderLightColor">#FF888888</Color>
  <Color x:Key="PressedBorderDarkColor">#FF444444</Color>
  <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
  <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
  <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>
  <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
  <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
  <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>
  <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>
  <LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0"/>
    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5"/>
    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#000000FF" Offset="0"/>
        <GradientStop Color="#600000FF" Offset="0.4"/>
        <GradientStop Color="#600000FF" Offset="0.6"/>
        <GradientStop Color="#000000FF" Offset="1"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
</ResourceDictionary>